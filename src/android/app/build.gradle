plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
}

apply plugin: 'com.android.application'

android {
    compileSdk Integer.parseInt(ANDROID_COMPILE_SDK_VERSION)

    defaultConfig {
        applicationId "com.example.nasaious"
        minSdk Integer.parseInt(MIN_SDK_VERSION)
        targetSdk Integer.parseInt(TARGET_SDK_VERSION)
        versionCode Integer.parseInt(VERSION_CODE)
        versionName VERSION_NAME

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
        }
    }

    buildFeatures {
        viewBinding true
        dataBinding true
    }
}

dependencies {
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    def dependencies = rootProject.ext.appDependencies

    implementation project(":domain")
    implementation project(":data")

    implementation dependencies.coroutine
    implementation dependencies.kotlinReflect

    implementation dependencies.coreKtx
    implementation dependencies.appCompat
    implementation dependencies.material
    implementation dependencies.constraintLayout
    implementation dependencies.splashScreen

    implementation dependencies.navigationUI
    implementation dependencies.navigationFragment

    implementation dependencies.viewModelKtx
    implementation dependencies.viewModelCompose
    implementation dependencies.liveDataKtx
    implementation dependencies.lifecycleRuntimeKtx

    implementation dependencies.hilt
    implementation dependencies.glide

    kapt dependencies.hiltCompiler
    kapt dependencies.glideCompiler

    implementation rootProject.ext.dataDependencies.moshi
    kapt rootProject.ext.dataDependencies.moshiKotlin
}

configurations.all {
    resolutionStrategy.eachDependency { DependencyResolveDetails details ->
        def requested = details.requested
        if (requested.group == 'org.jetbrains.kotlin') {
            details.useVersion kotlinVersion
        }
    }
}